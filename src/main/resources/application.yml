server:
  port: 8888


spring:
  redis:
    host: localhost
    port: 6379
    timeout: 1000
  rabbitmq:
    port: 5672
    host: localhost
    username: kong
    password: 123
    publisher-confirms: true    #  消息发送到交换机确认机制,是否确认回调
  datasource:
    name: test
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8&useAffectedRows=true
    username: root
    password: root
    type: com.alibaba.druid.pool.DruidDataSource
  mail:
    host: smtp.qq.com
    username: 1074454337@qq.com
    password: xgercocxrersjgeg # abhqqusyukgghjgd

jpush:
  appKey: 39cbe871d7284412df5013b2
  masterSecret: 13e1aafff34c1e91406fa87c
  liveTime: 30000

#配置rocketmq
rocketmq:
  groupId: GID_test_tcp
  msgTopic: topic_cpf_test
  accessKey: xxx
  secretKey: xxx
  onsAddr: xxx  #生产者TCP接入域名

##上传文件的路径
upload:
  server: http://ip地址:端口 #服务器地址
  headImg:
    path: /data/app/file/
  imageUrlPrefix: /data/app/file/
file.path: /data/app/file/

##配置注入
testcon:
  name: 测试配置注入
  address: 测试注入地址

wx:
  appId: wx39846f4445696689       #appid
  secret: ef363dc26599d54365b81013a83d6589          #密钥

# minio分布式文件系统
minio:
  url: http://192.168.2.140
  post: 9000
  accessKey: root
  secretKey: root123456
  bucketName: test2

#配置注入，用于搭建工厂者模式
factory:
  handler:
    factory:
      email:
        name: 第一个实例
        className: com.hengtong.led.mybatisPlus.service.impl.TestFactoryEmailImpl
      name:
        name: 第二个实例
        className: com.hengtong.led.mybatisPlus.service.impl.TestFactoryNameImpl

#限流令牌桶
lp:
  key: lpKeyTest

#配置指定定时任务
myScheduling:
  enable: false

#Spring security
jwt:
  secret: secret
  expiration: 60000
  token: Authorization


